<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.metavirtual.bloom.board.model.dao.BoardMapper">

    <resultMap id="boardResultMap" type="com.metavirtual.bloom.board.model.dto.BoardDTO">
        <id property="boardCode" column="BOARD_CODE"/>
        <result property="title" column="TITLE"/>
        <result property="postedDate" column="POSTED_DATE"/>
        <result property="deleteDate" column="DELETE_DATE"/>
        <result property="viewCount" column="VIEW_COUNT"/>
        <result property="boardCategory" column="BOARD_CATEGORY"/>
        <result property="boardContent" column="BOARD_CONTENT"/>
        <collection property="userId" column="USER_ID" resultMap="memberResultMap"/>
    </resultMap>

    <resultMap id="memberResultMap" type="com.metavirtual.bloom.user.model.dto.MemberDTO">
        <id property="userId" column="USER_ID"/>
        <result property="nickname" column="NICKNAME"/>
        <result property="testStatus" column="TEST_STATUS"/>
        <result property="etcContent" column="ETC_CONTENT"/>
        <result property="reportCount" column="REPORT_COUNT"/>
        <result property="therapistGenderCK" column="THERAPIST_GENDER_CK"/>
        <result property="relationCK" column="RELATION_CK"/>
    </resultMap>

    <resultMap id="commentResultMap" type="com.metavirtual.bloom.board.model.dto.MemberCommentDTO">
        <id property="commentCode" column="COMMENT_CODE"/>
        <result property="commentContent" column="COMMENT_CONTENT"/>
        <result property="postedDate" column="POSTED_DATE"/>
        <result property="deleteDate" column="DELETE_DATE"/>
        <collection property="boardCode" column="BOARD_CODE" resultMap="boardResultMap"/>
    </resultMap>

    <select id="selectTotalCount" resultType="_int" parameterType="hashmap">
        SELECT COUNT(*)
        FROM BOARD A
        <if test="searchSelect eq 'writer'">
            JOIN MEMBER B ON(A.USER_ID = B.USER_ID)
        </if>
        <if test="searchSelect eq 'community'">
            <where>
                A.BOARD_CATEGORY = #{ searchValue }
            </where>
        </if>
        <if test="searchSelect eq 'gomin'">
            <where>
                A.BOARD_CATEGORY = #{ searchValue }
            </where>
        </if>
        <if test="searchSelect eq 'writer'">
            <where>
                B.NICKNAME LIKE CONCAT('%', #{ searchValue }, '%')
            </where>
        </if>
        <if test="searchSelect eq 'title'">
            <where>
                A.TITLE LIKE CONCAT('%', #{ searchValue }, '%')
            </where>
        </if>
    </select>

    <select id="findAllBoard" resultMap="boardResultMap">
        SELECT A.BOARD_CODE
            ,A.TITLE
            ,A.POSTED_DATE
            ,A.BOARD_CATEGORY
            ,C.NICKNAME
            ,A.VIEW_COUNT
            ,A.USER_ID
        FROM (  SELECT B.BOARD_CODE
                    ,B.TITLE
                    ,B.POSTED_DATE
                    ,B.BOARD_CATEGORY
                    ,B.VIEW_COUNT
                    ,B.USER_ID
                FROM BOARD B
                <if test="searchSelect eq 'writer'">
                    JOIN MEMBER C ON(B.USER_ID = C.USER_ID)
                </if>
                <if test="searchSelect eq 'writer'">
                    <where>
                        C.NICKNAME LIKE CONCAT('%', #{ searchValue }, '%')
                    </where>
                </if>
                <if test="searchSelect eq '커뮤니티'">
                    <where>
                        B.TITLE LIKE CONCAT('%', #{ searchValue }, '%') AND B.BOARD_CATEGORY = '커뮤니티'
                    </where>
                </if>
                <if test="searchSelect eq '고민상담'">
                    <where>
                        B.TITLE LIKE CONCAT('%', #{ searchValue }, '%') AND B.BOARD_CATEGORY = '고민상담'
                    </where>
                </if>
                <if test="searchSelect eq 'title'">
                    <where>
                        B.TITLE LIKE CONCAT('%', #{ searchValue }, '%')
                    </where>
                </if>
        ) A
        LEFT JOIN MEMBER C ON(A.USER_ID = C.USER_ID)
        ORDER BY A.BOARD_CODE DESC
        LIMIT #{ startRow }, 10
    </select>

    <select id="boardSelectOne" resultMap="boardResultMap">
        SELECT A.BOARD_CODE
            ,A.TITLE
            ,A.POSTED_DATE
            ,A.BOARD_CATEGORY
            ,A.BOARD_CONTENT
            ,B.NICKNAME
            ,A.USER_ID
        FROM BOARD A
        JOIN MEMBER B ON (A.USER_ID = B.USER_ID)
        WHERE A.BOARD_CODE = #{ boardCode }
    </select>

    <select id="searchCommentList" resultMap="commentResultMap">
        SELECT A.COMMENT_CODE
            ,A.COMMENT_CONTENT
            ,A.POSTED_DATE
            ,A.BOARD_CODE
        FROM MEMBER_COMMENT A
        JOIN BOARD B ON (A.BOARD_CODE = B.BOARD_CODE)
        ORDER BY A.POSTED_DATE DESC
    </select>


    <insert id="boardNewPosting">
        INSERT INTO BOARD(
            TITLE
            ,POSTED_DATE
            ,BOARD_CATEGORY
            ,BOARD_CONTENT
            ,USER_ID
        )
        VALUES(#{ title }, NOW(), #{ boardCategory }, #{ boardContent }, #{ userId })
    </insert>
    <update id="boardModify">
    </update>

    <insert id="commentPosting">
        INSERT INTO MEMBER_COMMENT(
            COMMENT_CONTENT
            ,POSTED_DATE
            ,BOARD_CODE
        )
        VALUES(#{ commentContent }, #{ postedDate }, #{ boardCode })
    </insert>

    <update id="viewCount">
        UPDATE BOARD
        SET VIEW_COUNT = VIEW_COUNT + 1
        WHERE BOARD_CODE = #{ boardCode }
    </update>

</mapper>
